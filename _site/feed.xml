<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <description></description>
    <link>http://localhost:4000//</link>
    <atom:link href="http://localhost:4000//feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 14 Jan 2018 10:14:50 +0800</pubDate>
    <lastBuildDate>Sun, 14 Jan 2018 10:14:50 +0800</lastBuildDate>
    <generator>Jekyll v3.7.0</generator>
    
      <item>
        <title>2017年，再见～，2018年，你好～</title>
        <description>&lt;p&gt;2017年就要过去了，2018年即将到来了。&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;回顾2017年，对自己不是很满意，一直在努力，也还是很迷茫。中年危机的感觉越来越强烈，危机感越来越浓，总想着多学一些东西，让自己变得更强，但是定的目标脱离本职工作有点多，使得执行变得很困难。&lt;/p&gt;

&lt;p&gt;2018年就要来了，又该写下自己新的一年的目标了。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;工作相关的&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;读至少 5 本技术相关的书，纸质的，把买的书好好学习下，例如设计模式、Android相关的。&lt;/li&gt;
  &lt;li&gt;读至少 2 本技术相关的英文电子书，例如kotlin、python、Android、机器学习相关的。&lt;/li&gt;
  &lt;li&gt;每一到两周至少做一道算法题，直到通过公司内部的算法考试。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;孩子相关的&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;准备教孩子学习编程的资料，开始教孩子编程。(已经搜集了一些关于教孩子编程的书，需要学习下，并准备自己的讲义。)&lt;/li&gt;
  &lt;li&gt;教孩子认字：把《四五快读》教完。&lt;/li&gt;
  &lt;li&gt;锻炼孩子的数学思维：挑一些题给孩子讲讲，材料有《从数学到奥数》，《数独》游戏，《逻辑狗》。&lt;/li&gt;
  &lt;li&gt;至少看完 5 本孩子教育相关的书。&lt;/li&gt;
  &lt;li&gt;这个博客，至少更新10篇原创内容。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;不敢再多写了，2018年，将是看书学习的一年。使自己更沉稳，更自信。&lt;/p&gt;
</description>
        <pubDate>Sun, 31 Dec 2017 21:59:00 +0800</pubDate>
        <link>http://localhost:4000//blog/2017/12/31/bye2017-hi2018</link>
        <guid isPermaLink="true">http://localhost:4000//blog/2017/12/31/bye2017-hi2018</guid>
        
        <category>目标</category>
        
        
        <category>总结展望</category>
        
      </item>
    
      <item>
        <title>向死而生——早一点思考如何过这一生</title>
        <description>&lt;p&gt;想对孩子说的话很多，经常跟孩子聊一些世界观、价值观的东西，也会跟孩子聊为人处世、人情冷暖。
想了想，如果都写下来，还是先写最重要的吧。&lt;/p&gt;

&lt;p&gt;什么最重要？每个人的看法都不会相同。这是个人看法，主观认识，没有高下之分，更没必要讨论优劣。&lt;/p&gt;

&lt;p&gt;我认为最重要的，是早一点思考如何过自己这一生。&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;正文开始&lt;/p&gt;

&lt;p&gt;—– 分割线 —–&lt;/p&gt;

&lt;h2 id=&quot;思考如何过一生越早越好&quot;&gt;思考如何过一生，越早越好&lt;/h2&gt;

&lt;p&gt;我是在大概33岁的时候开始思考如何过自己这一生的，是有点晚了。我只能安慰自己说，虽然有点晚，但是这毕竟是我人生中最年轻的时刻，赶紧行动，还来得及。&lt;/p&gt;

&lt;p&gt;应该早点开始思考如何过自己这一生，那多早合适呢，这不好说，我个人认为在孩子10岁左右（三四年级）到15岁（初三）之间比较合适。如果过了这个时间段，也是越早思考越好。&lt;/p&gt;

&lt;p&gt;对于为什么要早开始思考，我的看法如下：&lt;/p&gt;

&lt;h3 id=&quot;孩子的认知在提前比我们小时候对世界和自身的认知要早&quot;&gt;孩子的认知在提前，比我们小时候对世界和自身的认知要早。&lt;/h3&gt;

&lt;p&gt;由于早教的理念和家长对孩子教育的重视，孩子很小就已经开始认识自身和周围的世界。
亲子阅读、亲子活动、亲子游，再加上电视中的各种动画片，幼儿园中的认知启蒙教育，各种教育培训机构的课程，这些都加快了孩子的成长。
但这不是拔苗助长（更多的是所谓的捕捉孩子的敏感期），孩子本身对陌生未知的世界充满好奇心，孩子好奇的天性让每个孩子都成了”十万个为什么“。在这种情况下，家长带着孩子认识世界、认识自身，孩子的认知自然而然提前了。&lt;/p&gt;

&lt;h3 id=&quot;让孩子尽早思考如何过一生孩子会对自己的人生进行规划目标明确更易达成&quot;&gt;让孩子尽早思考如何过一生，孩子会对自己的人生进行规划，目标明确，更易达成。&lt;/h3&gt;

&lt;p&gt;通过那些成名的人士的成长经历，可以看到多数名人在少年时代都有明确的目标，在世俗的人眼中，这些孩子都早熟，少年老成。他们是否都对自己的一生都进行了规划，这个不能确定，但是他们在小时候或少年时代对自己未来几年或十几年是有自己的明确的想法的。
例子就不举了，可以参考各种名人传记和名人故事。&lt;/p&gt;

&lt;p&gt;早点思考如何过一生，就可以尽早明确自己的目标。就不会把考试、作业、工作当成人生的全部或大部分。
目标可大可小，不可贪大，除非你是一个有雄（ye）心的人。&lt;/p&gt;

&lt;p&gt;目标不是一成不变的，随着年龄的增长，人生的目标也会调整。如果随着自己的成长，年少的目标仍然坚定不移，那也是不错的，不用在意别人世俗的眼光，不用在意别人不解、甚至有些鄙夷的表情。毕竟能坚持自己目标的人，并不多。不少人会在意周围人的看法、眼神，甚至更多的人不知道自己这一生都有什么目标。&lt;/p&gt;

&lt;p&gt;对于我来说，我的一个小目标是，让我的闺女在回忆她老爸时，会说我是一个好爸爸。你可能不知道，为了这个目标，我所有的教育理念都有所变化，也改变了我自己的教育方式，也再慢慢形成我自己的教育准则。&lt;/p&gt;

&lt;h3 id=&quot;学生时代时间充足想好如何过一生就会充分利用时间&quot;&gt;学生时代时间充足，想好如何过一生，就会充分利用时间。&lt;/h3&gt;

&lt;p&gt;过来人都有这个感慨，学生时代有大把的时间，但是没有多少钱，工作之后，挣钱了，但是业余时间所剩无几。我自己还有一个感慨是，可惜在时间充足的学生时代没有多读一些课外书。我觉得不该让这种带有些许后悔的感慨在自己的孩子上发生。&lt;/p&gt;

&lt;p&gt;有些人生经验是需要孩子经历之后才能获得，不管家长如何教育孩子，或者孩子如何从书中学得，没有经历过，孩子不会有深刻的体会，这种情况，孩子的试错是不可避免的，例如轻信陌生人而被骗，例如知道”亲兄弟，明算账”，还是跟自己的亲朋好友有说不清的经济纠纷，例如知道“门当户对”，但在找自己的另一半时仍然抱有不切实际的幻想，例如总是听长辈说”冷天别穿裙子，容易得腿病“，但是不到腿出问题的那一天，就不会对长辈的唠叨有深刻体会。例子有很多。&lt;/p&gt;

&lt;p&gt;我觉得”要珍惜时间“这事，不同于上面所说的”不经历，不能获得“的人生经验。
当我们明白时间的重要性时，珍惜时间是我们唯一的选项。时间不只是金钱，时间里还有我们生命的价值，生存的意义。&lt;/p&gt;

&lt;p&gt;时间最充足的是学生时代，有寒暑假时间、课余时间、周末时间。如果不想好如何过这一生，那么这些时间就会被浪费掉，或者被自己的父母占用掉（例如被逼着报各种兴趣班、课外班、补习班，那些自己主动要去的兴趣班不在此列）。&lt;/p&gt;

&lt;p&gt;学习、考试、兴趣班占用了学生大部分的时间。有没有想过学习是为了什么，考试是为了什么，上兴趣班是为了什么。&lt;/p&gt;

&lt;p&gt;站在”如何过一生”的高度，来审视自己的课内时间和课外时间，充分利用时间，积累对一生都有用的知识，这比”赢在起跑线“上更重要。&lt;/p&gt;

&lt;h2 id=&quot;思考如何过一生那思考的结果呢&quot;&gt;思考如何过一生，那思考的结果呢？&lt;/h2&gt;

&lt;p&gt;每个人都会有自己的思考结果，我思考的结果是：“向死而生”。&lt;/p&gt;

&lt;p&gt;“向死而生”，我自己的理解是，”因为人生来就是不断地向死亡靠近。
自己在几十年后即化为尘土，我面向死亡，时刻反思：我该如何度过这之后的几十年？我该做些什么？我该留下什么？“&lt;/p&gt;

&lt;p&gt;也许，我没有清晰明确的答案，但是有一些自己的原则与认识。
（想得比较乱，没有主次先后之分。）&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;做有意义的事，而且立刻去做;&lt;/li&gt;
  &lt;li&gt;做对得起良心的事;&lt;/li&gt;
  &lt;li&gt;跟孩子做朋友，与孩子一起成长;&lt;/li&gt;
  &lt;li&gt;做有独立思考能力的人，并能不断更新自己的认知;&lt;/li&gt;
  &lt;li&gt;以学习的心态过一生，不断学习新知识、老知识;&lt;/li&gt;
  &lt;li&gt;多读书，读书是一种生活方式。&lt;/li&gt;
  &lt;li&gt;…&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;就像这个博客，也是我留给这个世界的一点痕迹，留给我的孩子的一份礼物。&lt;/p&gt;

&lt;p&gt;你当然会有你自己的思考结果，按照自己思考的结果去做吧。&lt;/p&gt;

&lt;p&gt;BTW : 如果你不认同我的观点，轻拍。
彼此尊重说话的权利。
谢谢。&lt;/p&gt;
</description>
        <pubDate>Wed, 13 Sep 2017 23:13:00 +0800</pubDate>
        <link>http://localhost:4000//blog/2017/09/13/being-towards-death</link>
        <guid isPermaLink="true">http://localhost:4000//blog/2017/09/13/being-towards-death</guid>
        
        <category>和孩子说</category>
        
        
        <category>教育</category>
        
        <category>我的教育观</category>
        
      </item>
    
      <item>
        <title>VIPKID 心得和经验——花同样多的钱，追求的是效果</title>
        <description>&lt;p&gt;孩子用VIPKID学习一年多了，一些心得体会和经验总结分享出来。
这只是一部分，有些心得体会不能发出，因为可能有些偏激或者是偏见，容易引起争论和拍砖。
历来坚持自己想法、而想法又与众不同的人，容易没朋友。&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;注：原文首发于朋友圈。&lt;/p&gt;

&lt;p&gt;正文开始&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;花同样多的钱，追求的是效果。&lt;/p&gt;

&lt;p&gt;一节课25分钟，一对一，胜过90分钟一对三。&lt;/p&gt;

&lt;p&gt;一对多，孩子学会的不只有老师的口音，还有其他小朋友的口音。&lt;/p&gt;

&lt;p&gt;每周可以约3～5节课（我们通常一周3节课，少数一周4节课），让孩子始终保持英语语感。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;丰富的学习资料：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;（1）预习视频：让孩子学会主动学习的关键，如果家长英语不好，孩子多看几遍预习视频就好了，正宗美语发音，不用担心被家长的口音带跑偏。&lt;/p&gt;

&lt;p&gt;（2）课件PPT：课前，课后都可翻看课件，知道下节课要讲什么，心理有准备。上完课，可以回顾课件，继续复习、补习。&lt;/p&gt;

&lt;p&gt;（3）全程录像：上课内容全程录音录像，老师和孩子的表现都有记录，家长可准确掌握孩子的学习程度。&lt;/p&gt;

&lt;p&gt;（4）课后作业：作业与游戏结合，作业有趣，又适合孩子，在游戏中就把作业做了。孩子还会练习使用鼠标。&lt;/p&gt;

&lt;p&gt;（5）周期测评：一个单元12节课，第6节和第12节是测评课。测评结果可以随时查看，内容详细，结合上课视频，可以及时了解孩子的学习效果以及孩子需要重点复习的内容。&lt;/p&gt;

&lt;p&gt;（6）星球书库：vipkid推出的数字图书馆，有声读物，与KidsA-Z很像，孩子可以随时学习。&lt;/p&gt;

&lt;p&gt;（7）其他资源：有“拓展视频”，“外教带你看世界”，外教老师的视频和家长对外教的评价，外教老师给孩子的评价（很中肯，还细心，全英文，一两百词呢），中文班主任（不教课）解决家长的疑问，每月发朋友圈可获赠一节主修课（这个不确定持续到什么时候），推荐和被推荐都会有赠课，微博微信中有好多介绍如何约课、如何约到好老师的经验介绍。&lt;/p&gt;

&lt;p&gt;还有很多细节，资源已经足够，需要家长利用资源，让孩子学英语更轻松、更自信、更有成就感。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/vipkid/vipkid_qrcode.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 13 Sep 2017 22:30:00 +0800</pubDate>
        <link>http://localhost:4000//blog/2017/09/13/vipkid-experience</link>
        <guid isPermaLink="true">http://localhost:4000//blog/2017/09/13/vipkid-experience</guid>
        
        
        <category>教育</category>
        
      </item>
    
      <item>
        <title>为博文分个类——”给孩子推荐书”，“和孩子讲道理”，”我的教育观”</title>
        <description>&lt;p&gt;好久没有写点什么了，为了更好的梳理自己的想法和思考，把博文分成了3大类。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;给孩子推荐书&lt;/li&gt;
  &lt;li&gt;和孩子讲道理&lt;/li&gt;
  &lt;li&gt;我的教育观&lt;/li&gt;
&lt;/ul&gt;

&lt;!--more--&gt;

&lt;p&gt;这里的“孩子”仅代表我的孩子，因为这是我从教育孩子的实践中得来的，如果对你也有所帮助，尽管拿去。&lt;/p&gt;

&lt;p&gt;每一类博文想要写的内容：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;给孩子推荐书&lt;/strong&gt;：推荐对人生思考的书，如何看懂世界的书，提高品德的书，看清人性的书，等等。标签定为「推荐书目」。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;和孩子讲道理&lt;/strong&gt;：涉及安全，自我提升，学习，心态等等。
标签定为：「和孩子说」。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;我的教育观&lt;/strong&gt;：我新得到的教育知识，新发现的教育观点，和我对一些事情思考之后的新感悟。说的不一定对，我姑且说之，您姑且听之。
标签定为：「教育新得」。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;此篇是为了开个头，也为了鼓励自己坚持下去。&lt;/p&gt;
</description>
        <pubDate>Sat, 19 Aug 2017 22:30:00 +0800</pubDate>
        <link>http://localhost:4000//blog/2017/08/19/blog-overview</link>
        <guid isPermaLink="true">http://localhost:4000//blog/2017/08/19/blog-overview</guid>
        
        
        <category>教育</category>
        
      </item>
    
      <item>
        <title>亲子教育要多思考</title>
        <description>&lt;p&gt;这是开通博客之后第一篇关于亲子教育的博文，属于《教育新得》系列，此系列还会继续补充。&lt;/p&gt;

&lt;p&gt;事先声明：本文及本系列（教育新得系列）写的只是我个人学习、观察、思考的结果，希望有独立思考能力的你取精华去糟粕，生搬硬套，由此引发的任何问题概不负责。&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;注：本文写于20170424早上，原标题为《教育方法不能生搬硬套》，因为正向表达更显正能量，遂改为现标题。&lt;/p&gt;

&lt;p&gt;———————————- 正文分割线 ———————————-&lt;/p&gt;

&lt;p&gt;我们做父母的在追求自己的教育理念时，在尝试各种教育方法。
看了不少教育孩子的书，看了不少教育孩子的公众号，网络文章，网络视频，听了不少音频，还可能参加了不少亲子教育讲座。
学到了很多教育孩子的方法。&lt;/p&gt;

&lt;h2 id=&quot;-方法多了思考也要多&quot;&gt;★ 方法多了，思考也要多&lt;/h2&gt;

&lt;p&gt;方法多了总比没方法要好。问题出在方法在什么情况下用？
别人用此方法时的情形跟自己使用同样方法时的情况是一样的吗？
教育孩子，孩子身上是有教育痕迹的，孩子有自己的想法，他能认同家长现在用的教育方法吗？
孩子不吃这一套怎么办？尤其是，孩子已经不怎么信任自己的父母了，父母用别人的教育方法怎么会起作用？
还有家长在使用某个方法时是不是变通的过度了，加上了让孩子讨厌和反感的条件？&lt;/p&gt;

&lt;h2 id=&quot;-教育理念可能会变但教育导向一定要明确&quot;&gt;★ 教育理念可能会变，但教育导向一定要明确&lt;/h2&gt;

&lt;p&gt;教育方法有了，需要家长根据自己家的情况进行学习融入自己家的情况。
掌握教育方法的精髓，去掉跟自己理念不一致的地方，给孩子一个明确的导向。
当然，也要想想跟自己理念不一致时，别人说的对不对，自己的对不对，最后选其一，并坚持下去。
需要注意的是，教育理念随着时间也可能会变的，不能认死理，所以要多学习多思考，多细心观察教育自己孩子的效果，效果好，而且是孩子心悦诚服的接受，那就继续执行吧。否则，就要想想是不是走错了。&lt;/p&gt;

&lt;h2 id=&quot;-让孩子心悦诚服的教育理念才会传承下去&quot;&gt;★ 让孩子心悦诚服的教育理念才会传承下去&lt;/h2&gt;

&lt;p&gt;关于“孩子是不是心悦诚服的接受”这一点，即使你自己觉得自己的教育理念好，但是如果孩子不接受，那么你的孩子长大后会摒弃你的那一套理念，去实践他／她自己的理念，就像我们正在摒弃“棍棒出孝子”，“孩子要百分百听话”，“打是亲骂是爱”，“考试必须得100分”一样。&lt;/p&gt;
</description>
        <pubDate>Wed, 03 May 2017 23:19:00 +0800</pubDate>
        <link>http://localhost:4000//blog/2017/05/03/think-more-about-parenting</link>
        <guid isPermaLink="true">http://localhost:4000//blog/2017/05/03/think-more-about-parenting</guid>
        
        <category>亲子教育</category>
        
        <category>教育新得</category>
        
        
        <category>教育</category>
        
      </item>
    
      <item>
        <title>VIPKID 介绍</title>
        <description>&lt;p&gt;注： 本文的内容来自 VIPKID 的官方网站&lt;/p&gt;

&lt;h2 id=&quot;-0-vipkid-是什么&quot;&gt;★ 0. VIPKID 是什么？&lt;/h2&gt;

&lt;p&gt;VIPKID 的logo：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/vipkid/logo-white-orange-bg.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;VIPKID 的官方网站是：『 http://vipkid.com.cn 』&lt;/p&gt;

&lt;p&gt;官网中对 VIPKID的介绍，如下：&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;VIPKID 是&lt;strong&gt;大米未来科技有限公司&lt;/strong&gt;旗下的少儿国际教育品牌。致力于为‘有趣、独立和好奇’的‘新家长、大小孩’打造原汁原味的&lt;strong&gt;外教1对1在线美国小学课堂&lt;/strong&gt;。我们的愿景是：‘科技，让教育更人性化’。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/vipkid/vipkid_main.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;-1-vipkid-的学习理念&quot;&gt;★ 1. VIPKID 的学习理念&lt;/h2&gt;

&lt;p&gt;参考：http://vipkid.com.cn/xuexilinian&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/vipkid/vipkid_intro1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/vipkid/vipkid_intro2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/vipkid/vipkid_intro3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/vipkid/vipkid_intro4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/vipkid/vipkid_intro5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/vipkid/vipkid_intro6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;-2-vipkid-的特色&quot;&gt;★ 2. VIPKID 的特色&lt;/h2&gt;

&lt;p&gt;参考：http://vipkid.com.cn/vipkidtese&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/vipkid/vipkid_special1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/vipkid/vipkid_special2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/vipkid/vipkid_special3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;-3-vipkid-的北美师资&quot;&gt;★ 3. VIPKID 的北美师资&lt;/h2&gt;

&lt;p&gt;参考：http://vipkid.com.cn/beimeishizi&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/vipkid/vipkid_teacher1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/vipkid/vipkid_teacher2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/vipkid/vipkid_teacher3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/vipkid/vipkid_teacher4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;-4-vipkid-的课程体系&quot;&gt;★ 4. VIPKID 的课程体系&lt;/h2&gt;

&lt;p&gt;参考： http://www.vipkid.com.cn/kechengjieshao&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/vipkid/classintro1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/vipkid/classintro-table.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/vipkid/classintro2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/vipkid/classintro2-3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/vipkid/classintro3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/vipkid/classintro4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/vipkid/classintro5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 30 Apr 2017 23:55:00 +0800</pubDate>
        <link>http://localhost:4000//blog/2017/04/30/vipkid-intro</link>
        <guid isPermaLink="true">http://localhost:4000//blog/2017/04/30/vipkid-intro</guid>
        
        <category>在线教育</category>
        
        <category>VIPKID</category>
        
        
        <category>教育</category>
        
      </item>
    
      <item>
        <title>被CSDN误判的博文，到底哪个是敏感信息啊？</title>
        <description>&lt;p&gt;被CSDN误判的博文，全文原封不动贴在下面，到底哪个是敏感信息啊？&lt;/p&gt;

&lt;p&gt;———————-  分割线  ———————-&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Android中bindService的细节之三：多次调用bindService()，为什么onBind()只执行一次&lt;/strong&gt;&lt;/p&gt;

&lt;!--more--&gt;

&lt;h1 id=&quot;0-场景&quot;&gt;&lt;strong&gt;0. 场景&lt;/strong&gt;&lt;/h1&gt;

&lt;p&gt;为了更方便的说明问题，而又不失共性，本文中考虑下面两种情况：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;情况一：&lt;/strong&gt; App A绑定App B的service，App A多次调用bindService()，而不调用unbindService()，此时App B的service的onBind()只执行一次&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;情况二：&lt;/strong&gt; App A，App C绑定App B的service，App A和App C各调用一次或多次bindService()，而不调用unbindService()，此时App B的service的onBind()只执行一次&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;上面提到的两种情况有2个共同点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;（1）每次调用bindService()时，绑定的服务是一样的；&lt;/li&gt;
  &lt;li&gt;（2）没有调用unbindService()&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;例如，下面的示例代码，设置intent中的包名和service名，是通过：&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setClassName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;com.galian.app_b&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;com.galian.app_b.MyService&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;com.galian.app_b是App B的包名；
com.galian.app_b.MyService是App B提供的Service。
这样App A绑定的服务和App C绑定的服务就是一样的了。&lt;/p&gt;

&lt;p&gt;App A绑定App B的MyService的代码，如下：&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;n&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;intent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setClassName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;com.galian.app_b&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;com.galian.app_b.MyService&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;putExtra&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;KEY_STRING&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;From AppA!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;putExtra&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;KEY_INT&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Uri&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Uri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;content://com.galian.app_a/table&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;putExtra&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;KEY_PARCEABLE&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;bindService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mSvcConn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;BIND_AUTO_CREATE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;App C绑定App B的MyService的代码，如下：&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;n&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;intent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setClassName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;com.galian.app_b&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;com.galian.app_b.MyService&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;putExtra&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;KEY_STRING&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;From AppC!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;putExtra&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;KEY_FLOAT&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;42.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Uri&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Uri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;content://com.galian.app_c/table&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;putExtra&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;KEY_PARCEABLE&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;bindService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mSvcConn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;BIND_AUTO_CREATE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;App A 调用bindService()之后，等ServiceConnection的onServiceConnected()执行完，切换到App C，App C再调用bindService()，这时com.galian.app_b.MyService的onBind()只执行了一次。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt; 实际上可以有其他的方式可以让onBind()调用多次，本文中只讨论onBind()只执行一次的原因。&lt;/p&gt;

&lt;p&gt;上面的场景中，为什么onBind()只执行一次？&lt;/p&gt;

&lt;p&gt;关于bindService的基本流程，可以参考链接：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/u013553529/article/details/54698123&quot;&gt;《Android中bindService的细节之一：从进程的角度分析绑定Service的流程【Service所在进程首次启动】》&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/u013553529/article/details/54698123&quot;&gt;《Android中bindService的细节之二：从进程的角度分析绑定Service的流程【Service所在进程已存在】》&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;本文中分析这种情况：App B进程之前已经启动。因为这样可以方便对比App A绑定服务和App C绑定服务的区别。否则，如果App B进程之前不存在，则App A绑定服务和App C绑定服务的流程首先会有App B进程创建流程的差别（关于这个差别，可以参考上面2个链接）。而这不是本文讨论的重点。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;再次说明本文分析的前提：App B进程已经存在，但是App B的服务MyService之前没有被绑定过。&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&quot;1-关键的类intentbindrecord&quot;&gt;&lt;strong&gt;1. 关键的类：IntentBindRecord&lt;/strong&gt;&lt;/h1&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IntentBindRecord&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/** The running service. */&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ServiceRecord&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/** The intent that is bound.*/&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;FilterComparison&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/** All apps that have bound to this Intent. */&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ArrayMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ProcessRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AppBindRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;apps&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ArrayMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ProcessRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AppBindRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;();&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/** Binder published from service. */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;IBinder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;binder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/** Set when we have initiated a request for this binder. */&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requested&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/** Set when we have received the requested binder. */&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;received&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/** Set when we still need to tell the service all clients are unbound. */&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hasBound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/** Set when the service's onUnbind() has asked to be told about new clients. */&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;doRebind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;IntentBindRecord是一个关键的类，它记录着以下信息：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;（1）ServiceRecord service： 被绑定的服务的ServiceRecord；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;（2）Intent.FilterComparison intent：绑定服务时的intent。绑定服务时，将bindService()的intent与IntentBindRecord中的intent进行比较，如果服务已经绑定（received为true），且intent能匹配上（FilterComparison的equals()返回true），则直接返回binder（IntentBindRecord中的IBinder binder），这些内容后面会详细讲。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;（3）ArrayMap&amp;lt;ProcessRecord, AppBindRecord&amp;gt; apps：使用相同Intent.FilterComparison intent的所有apps&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;（4）IBinder binder：这是第一次绑定服务成功后，onBind()返回来的IBinder，通过publishService()传过来的。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;（5）boolean requested：标志位，requested为true表示绑定服务的请求已经发出了，是与&lt;code class=&quot;highlighter-rouge&quot;&gt;r.app.thread.scheduleBindService()&lt;/code&gt;对应的（r为ServiceRecord实例），即调用&lt;code class=&quot;highlighter-rouge&quot;&gt;r.app.thread.scheduleBindService()&lt;/code&gt;之后，通常要将requested置为true，以避免重复调用&lt;code class=&quot;highlighter-rouge&quot;&gt;r.app.thread.scheduleBindService()&lt;/code&gt;。
如果doRebind为true，调用&lt;code class=&quot;highlighter-rouge&quot;&gt;r.app.thread.scheduleBindService()&lt;/code&gt;之后，不会将requested置为true。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;（6）boolean received：标志位，received为true表示App B已经将onBind()返回的binder传给了AMS。是与IBinder binder同时起作用的。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;（7）boolean hasBound：表示是否有client绑定此服务。这里的client具体来说就是某一个Activity。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;（8）boolean doRebind：Service的&lt;code class=&quot;highlighter-rouge&quot;&gt;onUnbind()&lt;/code&gt;的返回值为true时，将通过AMS的&lt;code class=&quot;highlighter-rouge&quot;&gt;unbindFinished()&lt;/code&gt;传给AMS，记录在doRebind标志位中。下一次再有client绑定服务时，将根据doRebind的值来决定是调用onBind()，还是调用onRebind()。具体代码见：
handleBindService() @ ActivityThread.java&lt;/p&gt;
    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;handleBindService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BindServiceData&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;Service&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mServices&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;rebind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          	&lt;span class=&quot;c1&quot;&gt;// 如果之前onUnbind()返回false，则执行onBind()。（如果不重写onUnbind()，默认返回false）&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;IBinder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;binder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onBind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
              &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          	&lt;span class=&quot;c1&quot;&gt;// 如果之前onUnbind()返回true，则执行onRebind()。&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onRebind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
              &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果对这个类的成员变量还是模糊，也不要紧，后面还会在具体流程中提到。&lt;/p&gt;

&lt;h1 id=&quot;2-app-a绑定app-b的服务myservice&quot;&gt;&lt;strong&gt;2. App A绑定App B的服务MyService&lt;/strong&gt;&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;执行流程大致是这样的：&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bindService() @ ContextImpl
-&amp;gt; bindService() @ AMS
-&amp;gt; bindServiceLocked() @ ActiveServices
-&amp;gt; retrieveServiceLocked() @ ActiveServices
根据intent获取service组件信息，返回service对应的ServiceRecord

-&amp;gt; AppBindRecord b = s.retrieveAppBindingLocked(service, callerApp);
参数service是intent。这是本文讨论的重点。后面详细说。

-&amp;gt; bringUpServiceLocked()
	if (r.app != null &amp;amp;&amp;amp; r.app.thread != null) {
        sendServiceArgsLocked(r, execInFg, false);
        return null;
    }
需要注意这段代码，r为ServiceRecord实例。r.app为ProcessRecord实例，r.app.thread为实现IApplicationThread接口的实例。
r.app是在执行realStartServiceLocked()时赋值的，所以此时r.app是null。


-&amp;gt; realStartServiceLocked()
-&amp;gt; app.thread.scheduleCreateService()
此处会出现并行处理的情形，即AMS进程继续执行，同时App B进程处理CREATE_SERVICE消息，即handleCreateService()。

-&amp;gt; requestServiceBindingsLocked()
-&amp;gt; requestServiceBindingLocked()
-&amp;gt; r.app.thread.scheduleBindService()
此处会出现并行处理的情形，即AMS进程继续执行，同时App B进程处理BIND_SERVICE消息，即handleBindService()。需要注意的是，BIND_SERVICE消息是在CREATE_SERVICE消息处理完之后才能处理，因为这两个消息放入了消息队列，队列先入先出。所以handleBindService()的执行是在handleCreateService()之后。

-&amp;gt; i.requested = true;
i.hasBound = true;  // 已经有client绑定服务，所以hasBound置为true
i.doRebind = false;  // 默认为false
i为IntentBindRecord实例，在此情景中，执行完r.app.thread.scheduleBindService()，就把requested置为true，这个requested值将在后面的流程中判断。

-&amp;gt; 回到调用bringUpServiceLocked()方法的地方（在bindServiceLocked()中），继续执行bringUpServiceLocked()之后的代码

-&amp;gt; 执行下面的代码 （在bindServiceLocked()中）
	if (s.app != null &amp;amp;&amp;amp; b.intent.received) {
        try {
            c.conn.connected(s.name, b.intent.binder);
        }...
        ...
    } else if (!b.intent.requested) {
        requestServiceBindingLocked(s, b.intent, callerFg, false);
    }
这段代码也是本文分析的重点，留待后面详细说明。

-&amp;gt; handleCreateService() @ ActivityThread
handleCreateService()运行在App B进程中，是与AMS进程并行执行的，但是从代码的执行来看，handleCreateService()不会很快执行完，所以放在这里来理解也没有问题。

-&amp;gt; handleBindService() @ ActivityThread
运行在App B进程中。肯定是在handleCreateService()执行完才执行的。
这也是本文分析的重点。后面会详细分析。

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;21-重点代码1retrieveappbindinglocked&quot;&gt;&lt;strong&gt;2.1 重点代码1：retrieveAppBindingLocked()&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;retrieveAppBindingLocked() @ ServiceRecord&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    public AppBindRecord retrieveAppBindingLocked(Intent intent,
            ProcessRecord app) {
        Intent.FilterComparison filter = new Intent.FilterComparison(intent);
        IntentBindRecord i = bindings.get(filter);
        if (i == null) {
        	// 执行这里
            i = new IntentBindRecord(this, filter);
            bindings.put(filter, i);
        }
        AppBindRecord a = i.apps.get(app);
        if (a != null) {
            return a;
        }
        a = new AppBindRecord(this, i, app);
        i.apps.put(app, a);
        return a;
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;retrieveAppBindingLocked()根据intent来查询服务是否已经被绑定了，对应的代码是&lt;code class=&quot;highlighter-rouge&quot;&gt;IntentBindRecord i = bindings.get(filter)&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;在本文讨论的场景中App A是第一个绑定Myservice的，所以&lt;code class=&quot;highlighter-rouge&quot;&gt;bindings.get(filter)&lt;/code&gt;的结果为null，需要创建新的IntentBindRecord。&lt;/p&gt;

&lt;p&gt;需要说明的是，&lt;code class=&quot;highlighter-rouge&quot;&gt;bindings.get(filter)&lt;/code&gt;，get的过程中，需要判断bindings中的intent与filter这个intent是否相同，这种intent的比较都是由Intent.FilterComparison类来完成的。
Intent类本身并没有重写&lt;code class=&quot;highlighter-rouge&quot;&gt;equals()&lt;/code&gt;方法，所以不能用来判断intent是否相同。&lt;/p&gt;

&lt;p&gt;Intent.FilterComparison重写了&lt;code class=&quot;highlighter-rouge&quot;&gt;equals()&lt;/code&gt;方法，如下：
equals() @ FilterComparison @ Intent&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    @Override
    public boolean equals(Object obj) {
        if (obj instanceof FilterComparison) {
            Intent other = ((FilterComparison)obj).mIntent;
            return mIntent.filterEquals(other);
        }
        return false;
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;filterEquals() @ Intent&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;filterEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;other&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// 比较Intent中的各项指标：Action，Uri，MIME type，包名，Component，Category&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Objects&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mAction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mAction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Objects&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Objects&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Objects&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mPackage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mPackage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Objects&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Objects&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mCategories&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mCategories&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;22-重点代码2对intentbindrecord中的标志位进行判断&quot;&gt;&lt;strong&gt;2.2 重点代码2：对IntentBindRecord中的标志位进行判断&lt;/strong&gt;&lt;/h2&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;received&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;connected&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;binder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}...&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;requested&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 不执行这里&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;requestServiceBindingLocked&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callerFg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;s为ServiceRecord实例。s.app为ProcessRecord实例
b为AppBindRecord实例，
b.intent为IntentBindRecord实例。
这里对IntentBindRecord实例中的received和requested进行判断。&lt;/p&gt;

&lt;p&gt;b.intent.received的赋值：只有在service的onBind()执行完，执行publishService()之后才会将received置为true。这是还没有执行到publishService()，所以received为false。&lt;/p&gt;

&lt;p&gt;从前面的流程可以看到，b.intent.requested已经被置为true。&lt;/p&gt;

&lt;p&gt;所以，对于App A绑定App B的服务的场景中，上面的代码什么也没做。
啥都没做，咋是重点代码呢？为了与App C绑定服务的情况进行对比。因为App C也会执行这段代码，而且是要执行c.conn.connected()的。&lt;/p&gt;

&lt;h2 id=&quot;23-重点代码3handlebindservice&quot;&gt;&lt;strong&gt;2.3 重点代码3：handleBindService()&lt;/strong&gt;&lt;/h2&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;handleBindService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BindServiceData&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Service&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mServices&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            	&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;rebind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    	&lt;span class=&quot;c1&quot;&gt;// 执行这里&lt;/span&gt;
                        &lt;span class=&quot;c1&quot;&gt;// data.token是service对应的ServiceRecord&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;IBinder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;binder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onBind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;ActivityManagerNative&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getDefault&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;publishService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
                                &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;binder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    	&lt;span class=&quot;c1&quot;&gt;// 在此场景中，不执行这里&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onRebind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                        &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;执行onBind()返回binder对象，然后将此binder对象通过publishService()传给AMS。&lt;/p&gt;

&lt;p&gt;publishService() @ AMS&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;publishService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IBinder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IBinder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;synchronized&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;mServices&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;publishServiceLocked&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ServiceRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;publishServiceLocked() @ ActiveServices&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;publishServiceLocked&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ServiceRecord&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IBinder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    	&lt;span class=&quot;cm&quot;&gt;/* Binder.clearCallingIdentity()的目的是:
        	切换进程后，要提升执行代码的权限，将此时执行代码的权限提升为AMS，
            否则还是调用方App B的权限，这里的权限是指uid、pid对应的权限。
        */&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;origId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Binder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;clearCallingIdentity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;Intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;FilterComparison&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt;
                        &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;FilterComparison&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// r.bindings.get(filter)返回不为null，因为之前创建了IntentBindRecord&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// b.received初始值是false&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;IntentBindRecord&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bindings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;received&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                	&lt;span class=&quot;c1&quot;&gt;// 执行这里&lt;/span&gt;
                    &lt;span class=&quot;cm&quot;&gt;/*更新IntentBindRecord中的数据，b.binder更新为onBind()返回的binder对象；b.requested更新为true，表示绑定请求已经处理了；b.received更新为true，表示binder对象已经收到了，目的是下次不用再调用onBind()了，这在App C绑定服务时会介绍。*/&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;binder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;requested&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;received&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;conni&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;connections&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;conni&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;conni&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ConnectionRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;connections&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;valueAt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conni&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clist&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                            &lt;span class=&quot;n&quot;&gt;ConnectionRecord&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clist&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;binding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                                &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
                            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
                            &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                            	&lt;span class=&quot;c1&quot;&gt;// 执行这里，最终会调用到App A的onServiceConnected()&lt;/span&gt;
                                &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;connected&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
                        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

                &lt;span class=&quot;n&quot;&gt;serviceDoneExecutingLocked&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mDestroyingServices&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;contains&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;finally&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Binder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;restoreCallingIdentity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;origId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;至此，App A绑定App B的MyService的流程就介绍完了。
接下来，App C要绑定App B的MyService了。&lt;/p&gt;

&lt;h1 id=&quot;3-app-c绑定app-b的服务myservice&quot;&gt;&lt;strong&gt;3. App C绑定App B的服务MyService&lt;/strong&gt;&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;，此时App B的服务MyService已经被App A绑定过了。&lt;/p&gt;

&lt;p&gt;执行流程大致是这样的：&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;bindService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;@&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ContextImpl&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bindService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;@&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AMS&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bindServiceLocked&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;@&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ActiveServices&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;retrieveServiceLocked&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;@&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ActiveServices&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;这里与&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;绑定服务时有区别。&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;执行时，将创建的&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ServiceRecord&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;实例放到了&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ServiceMap&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;的&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mServicesByName&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;中，&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mServicesByName&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;是&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ArrayMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ComponentName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ServiceRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;类型的。&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;执行时，根据&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;中的&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;可以直接从&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mServicesByName&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;中获取&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ServiceRecord&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;。&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AppBindRecord&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;retrieveAppBindingLocked&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callerApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;参数&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;是&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;。&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;执行&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IntentBindRecord&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bindings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;获取到&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;绑定服务时创建的&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IntentBindRecord&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;实例，存入&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AppBindRecord&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;中，返回给&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;。&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bringUpServiceLocked&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;thread&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;sendServiceArgsLocked&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;execInFg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;为&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ServiceRecord&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;实例。&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;为&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ProcessRecord&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;实例。&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;这里的&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;是通过&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;retrieveServiceLocked&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;得到的，是之前&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;绑定服务时创建的&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ServiceRecord&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;实例，之前已经将&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;赋值了。&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;所以，此处会执行&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;，不会执行后面的&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;realStartServiceLocked&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;。&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;回到调用&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bringUpServiceLocked&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;方法的地方（在&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bindServiceLocked&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;中），继续执行&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bringUpServiceLocked&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;之后的代码&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;执行下面的代码&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;（在&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bindServiceLocked&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;中）&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;received&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        	&lt;span class=&quot;c1&quot;&gt;// 执行这里&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;connected&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;binder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}...&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;requested&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    	&lt;span class=&quot;c1&quot;&gt;// 不执行这里&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;requestServiceBindingLocked&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callerFg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;为&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ServiceRecord&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;实例，&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;不为&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;。&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;为&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IntentBindRecord&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;实例，在之前执行&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;publishService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;时，将&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IntentBindRecord&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;的&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;received&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;标志和&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;binder&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;赋值了。&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;所以，&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;received&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;为&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;，&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;binder&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;为有效值，是&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;onBind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;返回的&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;binder&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;对象。&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;connected&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;binder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;将会执行到。&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;connected&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;最终会调用到&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;的&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;onServiceConnected&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;。&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;至此，App C绑定App B的MyService的流程结束。
可以看到App C绑定服务的流程中，没有再调用MyService的onBind()。&lt;/p&gt;

&lt;h1 id=&quot;4-总结&quot;&gt;&lt;strong&gt;4. 总结&lt;/strong&gt;&lt;/h1&gt;

&lt;p&gt;简略概括一下App A和App C绑定App B的MyService的流程，如下：&lt;/p&gt;

&lt;p&gt;第一次App A绑定Service时，创建了IntentBindRecord实例，并记录在AppBindRecord中。
执行onBind()后，App B进程通过publishService()将binder传给了AMS，记录在IntentBindRecord实例中，并设置标志位received。&lt;/p&gt;

&lt;p&gt;第二次App C绑定Service时，获取之前的IntentBindRecord实例，判断标志位received为true，则直接调用App C的onServiceConnected()将binder对象传给App C。
所以第二次没有调用onBind()。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;继续阅读&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/u013553529/article/details/54698123&quot;&gt;《Android中bindService的细节之一：从进程的角度分析绑定Service的流程【Service所在进程首次启动】》&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/u013553529/article/details/54698123&quot;&gt;《Android中bindService的细节之二：从进程的角度分析绑定Service的流程【Service所在进程已存在】》&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 28 Jan 2017 23:13:00 +0800</pubDate>
        <link>http://localhost:4000//blog/2017/01/28/blocked-csdn-blog</link>
        <guid isPermaLink="true">http://localhost:4000//blog/2017/01/28/blocked-csdn-blog</guid>
        
        
        <category>CSDN</category>
        
      </item>
    
      <item>
        <title>莫名其妙地，我的CSDN博客被关闭了</title>
        <description>&lt;p&gt;我不知道是什么原因，所以也不知道如何整改，更不知道什么时候才能开通。&lt;/p&gt;

&lt;p&gt;在CSDN中所发博文，都是关于技术内容的。&lt;/p&gt;

&lt;p&gt;CSDN对技术文章的审核一直很严，所有博文都是审核之后才能与公众见面。&lt;/p&gt;

&lt;p&gt;现在，只能期待一个明确的结果。&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/my_csdn_blog_close.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;————————-分割线————————-&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;后续：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;我给CSDN管理员发邮件，询问博客被关闭的原因，CSDN管理员回复如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/csdn_reply1.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我回复询问是哪个敏感信息时，CSDN管理员回复如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/csdn_reply2.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我发在CSDN的博文，在此链接：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://localhost:4000/blog/2017/01/28/blocked-csdn-blog&quot;&gt;Android中bindService的细节之三：多次调用bindService()，为什么onBind()只执行一次&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;我真不知道到底哪个是敏感信息，谁能告诉？&lt;/p&gt;
</description>
        <pubDate>Fri, 27 Jan 2017 10:17:00 +0800</pubDate>
        <link>http://localhost:4000//blog/2017/01/27/my-csdn-blog-closed</link>
        <guid isPermaLink="true">http://localhost:4000//blog/2017/01/27/my-csdn-blog-closed</guid>
        
        
        <category>CSDN</category>
        
      </item>
    
      <item>
        <title>修改hosts文件访问Google网站，下载Android代码</title>
        <description>&lt;p&gt;一个良心的网站：&lt;a href=&quot;https://laod.cn/&quot;&gt;laod.cn&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;修改hosts访问google网站下载android代码&quot;&gt;修改hosts，访问Google网站，下载Android代码&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;第一步：获取hosts文件&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;去这个位置获取： &lt;a href=&quot;https://laod.cn/hosts/2017-google-hosts.html&quot;&gt;2017 Google hosts 持续更新&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;第二步：修改本机中的hosts文件&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;不同系统hosts文件的位置：（摘自laod.cn）&lt;/p&gt;

    &lt;!--more--&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Windows 系统hosts位于 C:\Windows\System32\drivers\etc\hosts
Android（安卓）系统hosts位于 /etc/hosts
Mac（苹果电脑）系统hosts位于 /etc/hosts
iPhone（iOS）系统hosts位于 /etc/hosts
Linux系统hosts位于 /etc/hosts
绝大多数Unix系统都是在 /etc/hosts
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;注意： 若更新后，hosts 没有立即生效，请重置网络：
在系统设置内开关网络，或启用禁用飞行模式，或者重启、刷新DNS缓存、浏览器缓存。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;将下载到的hosts中的内容更新到你的的hosts中。&lt;/p&gt;

&lt;p&gt;经验证，下载Android代码时速度还是很快的。&lt;/p&gt;

&lt;p&gt;————–分割线————–&lt;/p&gt;

&lt;p&gt;这篇blog原本发布在CSDN，无奈被CSDN删除，原因大家都懂的。&lt;/p&gt;

&lt;p&gt;如果不懂，可以看看这个新闻：&lt;strong&gt;谷歌是在封网站，能连就不正常&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/aliyun_reply.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;没有责怪CSDN和阿里云的意思，大环境如此，都是为了生存。&lt;/p&gt;

&lt;p&gt;在CSDN未能发出的blog：&lt;/p&gt;

&lt;p&gt;被放到了回收站：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/deleted_by_csdn.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;显示已删除：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/deleted_blog_about_hosts.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 15 Jan 2017 07:09:00 +0800</pubDate>
        <link>http://localhost:4000//blog/2017/01/15/hosts-access-google</link>
        <guid isPermaLink="true">http://localhost:4000//blog/2017/01/15/hosts-access-google</guid>
        
        <category>hosts</category>
        
        
        <category>访问Google</category>
        
      </item>
    
      <item>
        <title>【一心一村】公益活动</title>
        <description>&lt;p&gt;公司每年都要做的公益活动，每年两次大的活动（每次购买近1000箱柴鸡蛋），三星果园则是长期合作。&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/IMG_20170112_1423.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;三星果园：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/IMG_20170112_1517.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/IMG_20170112_1534.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;总之，做善事，挺好。&lt;/p&gt;
</description>
        <pubDate>Thu, 12 Jan 2017 15:54:00 +0800</pubDate>
        <link>http://localhost:4000//blog/2017/01/12/public-welfare-activity</link>
        <guid isPermaLink="true">http://localhost:4000//blog/2017/01/12/public-welfare-activity</guid>
        
        
        <category>公益活动</category>
        
      </item>
    
  </channel>
</rss>
